DROP DATABASE IF EXISTS `test`;
CREATE DATABASE `test`;

-- Generated by VBL - sql-ddl-generator
-- -----------------------------------------------------
-- Database test
-- -----------------------------------------------------

CREATE SCHEMA IF NOT EXISTS `test` DEFAULT CHARACTER SET utf8 ;
USE `test`;

-- -----------------------------------------------------
-- Table `test`.`language`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `test`.`language` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(32) NOT NULL COMMENT 'Name of the language, on the own language',
    `lang` VARCHAR(9) NOT NULL COMMENT 'Language part of the locale.',
    `locale` VARCHAR(9) NOT NULL COMMENT 'Tag for identifying language compliant with rfc5646',
    `active` BOOLEAN NOT NULL DEFAULT 1,
    `create_by` VARCHAR(32) NOT NULL,
    `create_time` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    `update_by` VARCHAR(32) NOT NULL,
    `update_time` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    PRIMARY KEY (`id`)
) Engine=InnoDB COMMENT='List of languages supported by the system';

CREATE UNIQUE INDEX `unique_language_locale` ON `test`.`language` (`locale`);

CREATE TRIGGER `language_before_insert` BEFORE INSERT ON `test`.`language`
FOR EACH ROW
    SET NEW.`create_by` = CURRENT_USER(),
        NEW.`update_by` = CURRENT_USER();

CREATE TRIGGER `language_before_update` BEFORE UPDATE ON `test`.`language`
FOR EACH ROW
    SET NEW.`update_by` = CURRENT_USER(),
        NEW.`update_time` = CURRENT_TIMESTAMP(3);



-- Generated by VBL - sql-ddl-generator
-- -----------------------------------------------------
-- Table `test`.`user`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `test`.`user` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `vbuid` VARBINARY(8) NOT NULL DEFAULT (SUBSTRING(SHA1(CONCAT(NOW(), RAND(), 'user')), 1, 8)),
    `first_name` VARCHAR(45) NOT NULL,
    `last_name` VARCHAR(45) NOT NULL,
    `email` VARCHAR(127) NOT NULL,
    `password` VARBINARY(128),
    `token` VARBINARY(128),
    `token_create_time` TIMESTAMP,
    `status` ENUM('pending_confirmation', 'confirmed') NOT NULL DEFAULT 'pending_confirmation',
    `active` BOOLEAN NOT NULL DEFAULT 1,
    `create_by` VARCHAR(32) NOT NULL,
    `create_time` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    `update_by` VARCHAR(32) NOT NULL,
    `update_time` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    `who_id` INT UNSIGNED NOT NULL,
    `language_id` INT UNSIGNED NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_user_who_id`
        FOREIGN KEY(`who_id`)
        REFERENCES `test`.`user` (`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION,
    CONSTRAINT `fk_user_language_id`
        FOREIGN KEY(`language_id`)
        REFERENCES `test`.`language` (`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION
) Engine=InnoDB COMMENT='Identifies the application\'s users.';

CREATE UNIQUE INDEX `unique_user_vbuid` ON `test`.`user` (`vbuid`);
CREATE UNIQUE INDEX `unique_user_email` ON `test`.`user` (`email`);

CREATE TRIGGER `user_before_insert` BEFORE INSERT ON `test`.`user`
FOR EACH ROW
    SET NEW.`create_by` = CURRENT_USER(),
        NEW.`update_by` = CURRENT_USER();

CREATE TRIGGER `user_before_update` BEFORE UPDATE ON `test`.`user`
FOR EACH ROW
    SET NEW.`update_by` = CURRENT_USER(),
        NEW.`update_time` = CURRENT_TIMESTAMP(3);

-- -----------------------------------------------------
-- Audit Table for user
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `test`.`audit_user` LIKE `test`.`user`;
ALTER TABLE `test`.`audit_user` ADD COLUMN `user_id` INT UNSIGNED NOT NULL AFTER `id`;
ALTER TABLE `test`.`audit_user` ADD     CONSTRAINT `fk_audit_user_user_id`
        FOREIGN KEY(`user_id`)
        REFERENCES `test`.`user` (`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION;

DROP INDEX `unique_user_vbuid` ON `test`.`audit_user`;
DROP INDEX `unique_user_email` ON `test`.`audit_user`;

ALTER TABLE `test`.`audit_user` ADD     CONSTRAINT `fk_audit_user_who_id`
        FOREIGN KEY(`who_id`)
        REFERENCES `test`.`user` (`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION;
ALTER TABLE `test`.`audit_user` ADD     CONSTRAINT `fk_audit_user_language_id`
        FOREIGN KEY(`language_id`)
        REFERENCES `test`.`language` (`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION;
delimiter //
CREATE TRIGGER `audit_user_insert_trigger`
AFTER INSERT ON `test`.`user`
FOR EACH ROW
BEGIN
    INSERT INTO `test`.`audit_user` (
        `user_id`,
        `vbuid`,
        `first_name`,
        `last_name`,
        `email`,
        `password`,
        `token`,
        `token_create_time`,
        `status`,
        `active`,
        `create_by`,
        `update_by`,
        `who_id`,
        `language_id`
    ) VALUES (
        NEW.`id`,
        NEW.`vbuid`,
        NEW.`first_name`,
        NEW.`last_name`,
        NEW.`email`,
        NEW.`password`,
        NEW.`token`,
        NEW.`token_create_time`,
        NEW.`status`,
        NEW.`active`,
        NEW.`create_by`,
        NEW.`update_by`,
        NEW.`who_id`,
        NEW.`language_id`
    );
END;//
DELIMITER ;

delimiter //
CREATE TRIGGER `audit_user_update_trigger`
AFTER UPDATE ON `test`.`user`
FOR EACH ROW
BEGIN
    INSERT INTO `test`.`audit_user` (
        `user_id`,
        `vbuid`,
        `first_name`,
        `last_name`,
        `email`,
        `password`,
        `token`,
        `token_create_time`,
        `status`,
        `active`,
        `create_by`,
        `update_by`,
        `who_id`,
        `language_id`
    ) VALUES (
        NEW.`id`,
        NEW.`vbuid`,
        NEW.`first_name`,
        NEW.`last_name`,
        NEW.`email`,
        NEW.`password`,
        NEW.`token`,
        NEW.`token_create_time`,
        NEW.`status`,
        NEW.`active`,
        NEW.`create_by`,
        NEW.`update_by`,
        NEW.`who_id`,
        NEW.`language_id`
    );
END;//
DELIMITER ;

-- Populate language table
INSERT INTO `language`(`name`, `lang`, `locale`) VALUES
    ('English', 'en', 'en-us'),
    ('PortuguÃªs', 'pt', 'pt-br');

SET FOREIGN_KEY_CHECKS=0;

-- Populate user
INSERT INTO `user`(`first_name`, `last_name`, `email`, `language_id`, `who_id`) VALUES('Admin', 'Admin', 'admin@example.com', (SELECT `id` FROM `language` WHERE `locale` = 'en-us'), 1);
UPDATE `user` SET `who_id` = `id`;

SET FOREIGN_KEY_CHECKS=1;

